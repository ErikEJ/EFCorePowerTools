// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace ScaffoldingPostgreSqlMultiSchemaTester.Models
{
    /// <summary>
    /// Products sold or used in the manfacturing of sold products.
    /// </summary>
    public partial class Product
    {
        public Product()
        {
            BillofmaterialsComponent = new HashSet<Billofmaterials>();
            BillofmaterialsProductassembly = new HashSet<Billofmaterials>();
            Productcosthistory = new HashSet<Productcosthistory>();
            Productdocument = new HashSet<Productdocument>();
            Productinventory = new HashSet<Productinventory>();
            Productlistpricehistory = new HashSet<Productlistpricehistory>();
            Productproductphoto = new HashSet<Productproductphoto>();
            Productreview = new HashSet<Productreview>();
            Productvendor = new HashSet<Productvendor>();
            Purchaseorderdetail = new HashSet<Purchaseorderdetail>();
            Shoppingcartitem = new HashSet<Shoppingcartitem>();
            Specialofferproduct = new HashSet<Specialofferproduct>();
            Transactionhistory = new HashSet<Transactionhistory>();
            Workorder = new HashSet<Workorder>();
        }

        /// <summary>
        /// Primary key for Product records.
        /// </summary>
        public int Productid { get; set; }
        /// <summary>
        /// Name of the product.
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Unique product identification number.
        /// </summary>
        public string Productnumber { get; set; }
        /// <summary>
        /// 0 = Product is purchased, 1 = Product is manufactured in-house.
        /// </summary>
        public bool? Makeflag { get; set; }
        /// <summary>
        /// 0 = Product is not a salable item. 1 = Product is salable.
        /// </summary>
        public bool? Finishedgoodsflag { get; set; }
        /// <summary>
        /// Product color.
        /// </summary>
        public string Color { get; set; }
        /// <summary>
        /// Minimum inventory quantity.
        /// </summary>
        public int Safetystocklevel { get; set; }
        /// <summary>
        /// Inventory level that triggers a purchase order or work order.
        /// </summary>
        public int Reorderpoint { get; set; }
        /// <summary>
        /// Standard cost of the product.
        /// </summary>
        public decimal Standardcost { get; set; }
        /// <summary>
        /// Selling price.
        /// </summary>
        public decimal Listprice { get; set; }
        /// <summary>
        /// Product size.
        /// </summary>
        public string Size { get; set; }
        /// <summary>
        /// Unit of measure for Size column.
        /// </summary>
        public string Sizeunitmeasurecode { get; set; }
        /// <summary>
        /// Unit of measure for Weight column.
        /// </summary>
        public string Weightunitmeasurecode { get; set; }
        /// <summary>
        /// Product weight.
        /// </summary>
        public decimal? Weight { get; set; }
        /// <summary>
        /// Number of days required to manufacture the product.
        /// </summary>
        public int Daystomanufacture { get; set; }
        /// <summary>
        /// R = Road, M = Mountain, T = Touring, S = Standard
        /// </summary>
        public string Productline { get; set; }
        /// <summary>
        /// H = High, M = Medium, L = Low
        /// </summary>
        public string Class { get; set; }
        /// <summary>
        /// W = Womens, M = Mens, U = Universal
        /// </summary>
        public string Style { get; set; }
        /// <summary>
        /// Product is a member of this product subcategory. Foreign key to ProductSubCategory.ProductSubCategoryID.
        /// </summary>
        public int? Productsubcategoryid { get; set; }
        /// <summary>
        /// Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
        /// </summary>
        public int? Productmodelid { get; set; }
        /// <summary>
        /// Date the product was available for sale.
        /// </summary>
        public DateTime Sellstartdate { get; set; }
        /// <summary>
        /// Date the product was no longer available for sale.
        /// </summary>
        public DateTime? Sellenddate { get; set; }
        /// <summary>
        /// Date the product was discontinued.
        /// </summary>
        public DateTime? Discontinueddate { get; set; }
        public Guid Rowguid { get; set; }
        public DateTime Modifieddate { get; set; }

        public virtual Productmodel Productmodel { get; set; }
        public virtual Productsubcategory Productsubcategory { get; set; }
        public virtual Unitmeasure SizeunitmeasurecodeNavigation { get; set; }
        public virtual Unitmeasure WeightunitmeasurecodeNavigation { get; set; }
        public virtual ICollection<Billofmaterials> BillofmaterialsComponent { get; set; }
        public virtual ICollection<Billofmaterials> BillofmaterialsProductassembly { get; set; }
        public virtual ICollection<Productcosthistory> Productcosthistory { get; set; }
        public virtual ICollection<Productdocument> Productdocument { get; set; }
        public virtual ICollection<Productinventory> Productinventory { get; set; }
        public virtual ICollection<Productlistpricehistory> Productlistpricehistory { get; set; }
        public virtual ICollection<Productproductphoto> Productproductphoto { get; set; }
        public virtual ICollection<Productreview> Productreview { get; set; }
        public virtual ICollection<Productvendor> Productvendor { get; set; }
        public virtual ICollection<Purchaseorderdetail> Purchaseorderdetail { get; set; }
        public virtual ICollection<Shoppingcartitem> Shoppingcartitem { get; set; }
        public virtual ICollection<Specialofferproduct> Specialofferproduct { get; set; }
        public virtual ICollection<Transactionhistory> Transactionhistory { get; set; }
        public virtual ICollection<Workorder> Workorder { get; set; }
    }
}