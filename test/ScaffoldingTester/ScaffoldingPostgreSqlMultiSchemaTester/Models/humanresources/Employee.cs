// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace ScaffoldingPostgreSqlMultiSchemaTester.Models
{
    /// <summary>
    /// Employee information such as salary, department, and title.
    /// </summary>
    public partial class Employee
    {
        public Employee()
        {
            Document = new HashSet<Document>();
            Employeedepartmenthistory = new HashSet<Employeedepartmenthistory>();
            Employeepayhistory = new HashSet<Employeepayhistory>();
            Jobcandidate = new HashSet<Jobcandidate>();
            Purchaseorderheader = new HashSet<Purchaseorderheader>();
        }

        /// <summary>
        /// Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.
        /// </summary>
        public int Businessentityid { get; set; }
        /// <summary>
        /// Unique national identification number such as a social security number.
        /// </summary>
        public string Nationalidnumber { get; set; }
        /// <summary>
        /// Network login.
        /// </summary>
        public string Loginid { get; set; }
        /// <summary>
        /// Work title such as Buyer or Sales Representative.
        /// </summary>
        public string Jobtitle { get; set; }
        /// <summary>
        /// Date of birth.
        /// </summary>
        public DateOnly Birthdate { get; set; }
        /// <summary>
        /// M = Married, S = Single
        /// </summary>
        public char Maritalstatus { get; set; }
        /// <summary>
        /// M = Male, F = Female
        /// </summary>
        public char Gender { get; set; }
        /// <summary>
        /// Employee hired on this date.
        /// </summary>
        public DateOnly Hiredate { get; set; }
        /// <summary>
        /// Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
        /// </summary>
        public bool? Salariedflag { get; set; }
        /// <summary>
        /// Number of available vacation hours.
        /// </summary>
        public int Vacationhours { get; set; }
        /// <summary>
        /// Number of available sick leave hours.
        /// </summary>
        public int Sickleavehours { get; set; }
        /// <summary>
        /// 0 = Inactive, 1 = Active
        /// </summary>
        public bool? Currentflag { get; set; }
        public Guid Rowguid { get; set; }
        public DateTime Modifieddate { get; set; }
        /// <summary>
        /// Where the employee is located in corporate hierarchy.
        /// </summary>
        public string Organizationnode { get; set; }

        public virtual Person Businessentity { get; set; }
        public virtual Salesperson Salesperson { get; set; }
        public virtual ICollection<Document> Document { get; set; }
        public virtual ICollection<Employeedepartmenthistory> Employeedepartmenthistory { get; set; }
        public virtual ICollection<Employeepayhistory> Employeepayhistory { get; set; }
        public virtual ICollection<Jobcandidate> Jobcandidate { get; set; }
        public virtual ICollection<Purchaseorderheader> Purchaseorderheader { get; set; }
    }
}