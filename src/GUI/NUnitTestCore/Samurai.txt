Model: 
  EntityType: Battle
    Properties: 
      Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd 0 0 0 -1 0
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
      EndDate (DateTime) Required 1 1 -1 -1 -1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDateTimeTypeMapping
      Name (string) 2 2 -1 -1 -1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerStringTypeMapping
      StartDate (DateTime) Required 3 3 -1 -1 -1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerDateTimeTypeMapping
    Navigations: 
      SamuraiBattles (<SamuraiBattles>k__BackingField, List<SamuraiBattle>) Collection ToDependent SamuraiBattle Inverse: Battle 0 -1 1 -1 -1
    Keys: 
      Id PK
    Annotations: 
      Relational:TableName: Battles
      RelationshipDiscoveryConvention:NavigationCandidates: System.Collections.Immutable.ImmutableSortedDictionary`2[System.Reflection.PropertyInfo,System.Type]
  EntityType: Identity
    Properties: 
      Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd 0 0 0 -1 0
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
      RealName (string) 1 1 -1 -1 -1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerStringTypeMapping
      SamuraiId (int) Required FK Index 2 2 1 -1 1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
    Navigations: 
      Samurai (<Samurai>k__BackingField, Samurai) ToPrincipal Samurai Inverse: SecretIdentity 0 -1 2 -1 -1
    Keys: 
      Id PK
    Foreign keys: 
      Identity {'SamuraiId'} -> Samurai {'Id'} Unique ToDependent: SecretIdentity ToPrincipal: Samurai
    Annotations: 
      RelationshipDiscoveryConvention:NavigationCandidates: System.Collections.Immutable.ImmutableSortedDictionary`2[System.Reflection.PropertyInfo,System.Type]
  EntityType: Quote
    Properties: 
      Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd 0 0 0 -1 0
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
      SamuraiId (int) Required FK Index 1 1 1 -1 1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
      Text (string) 2 2 -1 -1 -1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerStringTypeMapping
    Navigations: 
      Samurai (<Samurai>k__BackingField, Samurai) ToPrincipal Samurai Inverse: Quotes 0 -1 2 -1 -1
    Keys: 
      Id PK
    Foreign keys: 
      Quote {'SamuraiId'} -> Samurai {'Id'} ToDependent: Quotes ToPrincipal: Samurai
    Annotations: 
      Relational:TableName: Quotes
      RelationshipDiscoveryConvention:NavigationCandidates: System.Collections.Immutable.ImmutableSortedDictionary`2[System.Reflection.PropertyInfo,System.Type]
  EntityType: Samurai
    Properties: 
      Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd 0 0 0 -1 0
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
      Name (string) 1 1 -1 -1 -1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.Internal.SqlServerStringTypeMapping
    Navigations: 
      Quotes (<Quotes>k__BackingField, List<Quote>) Collection ToDependent Quote Inverse: Samurai 0 -1 1 -1 -1
      SamuraiBattles (<SamuraiBattles>k__BackingField, List<SamuraiBattle>) Collection ToDependent SamuraiBattle Inverse: Samurai 1 -1 2 -1 -1
      SecretIdentity (<SecretIdentity>k__BackingField, Identity) ToDependent Identity Inverse: Samurai 2 -1 3 -1 -1
    Keys: 
      Id PK
    Annotations: 
      Relational:TableName: Samurais
      RelationshipDiscoveryConvention:NavigationCandidates: System.Collections.Immutable.ImmutableSortedDictionary`2[System.Reflection.PropertyInfo,System.Type]
  EntityType: SamuraiBattle
    Properties: 
      BattleId (int) Required PK FK AfterSave:Throw 0 0 0 -1 0
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
      SamuraiId (int) Required PK FK Index AfterSave:Throw 1 1 1 -1 1
        Annotations: 
          Relational:TypeMapping: Microsoft.EntityFrameworkCore.Storage.IntTypeMapping
    Navigations: 
      Battle (<Battle>k__BackingField, Battle) ToPrincipal Battle Inverse: SamuraiBattles 0 -1 2 -1 -1
      Samurai (<Samurai>k__BackingField, Samurai) ToPrincipal Samurai Inverse: SamuraiBattles 1 -1 3 -1 -1
    Keys: 
      BattleId, SamuraiId PK
    Foreign keys: 
      SamuraiBattle {'BattleId'} -> Battle {'Id'} ToDependent: SamuraiBattles ToPrincipal: Battle
      SamuraiBattle {'SamuraiId'} -> Samurai {'Id'} ToDependent: SamuraiBattles ToPrincipal: Samurai
    Annotations: 
      RelationshipDiscoveryConvention:NavigationCandidates: System.Collections.Immutable.ImmutableSortedDictionary`2[System.Reflection.PropertyInfo,System.Type]
Annotations: 
  ProductVersion: 2.0.0-rtm-26452
  SqlServer:ValueGenerationStrategy: IdentityColumn