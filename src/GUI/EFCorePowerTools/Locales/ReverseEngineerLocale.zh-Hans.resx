<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddDatabaseConnection" xml:space="preserve">
    <value>添加数据库连接</value>
  </data>
  <data name="AddExternalDacPac" xml:space="preserve">
    <value>添加 SQL Server 数据库项目(.dacpac)</value>
  </data>
  <data name="AddSchemasToFilter" xml:space="preserve">
    <value>添加要筛选的架构</value>
  </data>
  <data name="Advanced" xml:space="preserve">
    <value>高级</value>
  </data>
  <data name="AlwaysIncludeAllDatabaseObjects" xml:space="preserve">
    <value>始终生成所有数据库对象（预览）</value>
  </data>
  <data name="CannotGenerateCodeWhileDebugging" xml:space="preserve">
    <value>调试时无法生成代码</value>
  </data>
  <data name="CannotUncheckPrimaryKey" xml:space="preserve">
    <value>此列是主键的一部分，如果选择了该表，则不能取消选中该列。</value>
  </data>
  <data name="CheckOutputWindowForErrors" xml:space="preserve">
    <value>请检查输出窗口是否有错误</value>
  </data>
  <data name="CheckOutputWindowForWarnings" xml:space="preserve">
    <value>请检查输出窗口中的警告</value>
  </data>
  <data name="ChooseConfigurationFile" xml:space="preserve">
    <value>选择配置文件</value>
  </data>
  <data name="ChooseDatabaseConnection" xml:space="preserve">
    <value>选择数据库连接</value>
  </data>
  <data name="ChooseDatabaseObjects" xml:space="preserve">
    <value>选择数据库对象</value>
  </data>
  <data name="ChooseSchemas" xml:space="preserve">
    <value>选择架构</value>
  </data>
  <data name="ChooseSqlServerDatabaseProject" xml:space="preserve">
    <value>选择 SQL Server 数据库项目(.dacpac)</value>
  </data>
  <data name="ContextName" xml:space="preserve">
    <value>上下文名称</value>
  </data>
  <data name="ContextNameRequired" xml:space="preserve">
    <value>上下文名称是必填项</value>
  </data>
  <data name="CustomizeUsingHandlebars" xml:space="preserve">
    <value>使用 Handlebars 模板生成自定义代码</value>
  </data>
  <data name="DatabaseConnectionNotFoundCannotRefresh" xml:space="preserve">
    <value>找不到数据库连接，无法刷新</value>
  </data>
  <data name="DbContextOnly" xml:space="preserve">
    <value>仅上下文</value>
  </data>
  <data name="DbContextPath" xml:space="preserve">
    <value>上下文路径</value>
  </data>
  <data name="DbContextSubNamespace" xml:space="preserve">
    <value>上下文子命名空间</value>
  </data>
  <data name="EntityTypesAndContext" xml:space="preserve">
    <value>实体和上下文</value>
  </data>
  <data name="EntityTypesOnly" xml:space="preserve">
    <value>仅实体</value>
  </data>
  <data name="EntityTypesPath" xml:space="preserve">
    <value>实体路径</value>
  </data>
  <data name="EntityTypesSubNamespace" xml:space="preserve">
    <value>实体子命名空间</value>
  </data>
  <data name="FilterSchemas" xml:space="preserve">
    <value>筛选架构</value>
  </data>
  <data name="Functions" xml:space="preserve">
    <value>函数</value>
  </data>
  <data name="GenerateEFCoreModelInProject" xml:space="preserve">
    <value>在 {0} 中生成 EF Core 模型</value>
  </data>
  <data name="GeneratingCode" xml:space="preserve">
    <value>正在生成代码...</value>
  </data>
  <data name="GettingReadyToConnect" xml:space="preserve">
    <value>正在准备连接...</value>
  </data>
  <data name="IncludeConnectionStringGeneratedCode" xml:space="preserve">
    <value>在生成的代码中包含连接字符串</value>
  </data>
  <data name="InstallEFCoreProviderPackageInProject" xml:space="preserve">
    <value>在项目中安装 EF Core 包</value>
  </data>
  <data name="InstallingEFCoreProviderPackage" xml:space="preserve">
    <value>正在安装 EF Core 包...</value>
  </data>
  <data name="LoadingDatabaseObjects" xml:space="preserve">
    <value>正在加载数据库对象...</value>
  </data>
  <data name="LoadingOptions" xml:space="preserve">
    <value>正在加载选项...</value>
  </data>
  <data name="MapNodaTimeTypes" xml:space="preserve">
    <value>映射 NodaTime 数据类型</value>
  </data>
  <data name="MapSpatialTypes" xml:space="preserve">
    <value>映射空间数据类型</value>
  </data>
  <data name="ModelGeneratedSuccesfully" xml:space="preserve">
    <value>模型生成成功</value>
  </data>
  <data name="Namespace" xml:space="preserve">
    <value>命名空间</value>
  </data>
  <data name="NamespaceRequired" xml:space="preserve">
    <value>命名空间是必填项</value>
  </data>
  <data name="Naming" xml:space="preserve">
    <value>命名策略</value>
  </data>
  <data name="NewNameCannotBeEmpty" xml:space="preserve">
    <value>新名称不能为空</value>
  </data>
  <data name="NoPrimaryKey" xml:space="preserve">
    <value>该表未定义主键</value>
  </data>
  <data name="PackageNotFoundInProject" xml:space="preserve">
    <value>在项目中找不到 “{0}” 包，必须安装后才能生成</value>
  </data>
  <data name="PluralizeSingularizeObjectNames" xml:space="preserve">
    <value>使用单数或复数形式</value>
  </data>
  <data name="ReleaseNotes" xml:space="preserve">
    <value>发行说明</value>
  </data>
  <data name="RemoveConstructorFromEntities" xml:space="preserve">
    <value>从实体类中删除构造函数（实验性）</value>
  </data>
  <data name="RemoveNavigationsFromEntities" xml:space="preserve">
    <value>从实体类中删除导航属性（实验性）</value>
  </data>
  <data name="RemoveSelectedConnection" xml:space="preserve">
    <value>删除选定的连接</value>
  </data>
  <data name="RemoveSQLDefaultFromBoolColumns" xml:space="preserve">
    <value>删除bool列的SQL默认值（预览）</value>
  </data>
  <data name="ReportingResult" xml:space="preserve">
    <value>报告结果...</value>
  </data>
  <data name="ReverseEngineerCompleted" xml:space="preserve">
    <value>反向工程在{0}内完成</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SearchForObjects" xml:space="preserve">
    <value>搜索对象</value>
  </data>
  <data name="SplitDbContextIntoConfigurationClasses" xml:space="preserve">
    <value>使用分组配置（预览）</value>
  </data>
  <data name="SqlServerNoViewDefinitionRights" xml:space="preserve">
    <value>当前 SQL Server 用户没有“查看定义”的权限，默认约束可能不可用</value>
  </data>
  <data name="SQLServerVersionNotSupported" xml:space="preserve">
    <value>可能不支持 SQL Server {0} 版本</value>
  </data>
  <data name="StoredProcedures" xml:space="preserve">
    <value>存储过程</value>
  </data>
  <data name="StoredProceduresReturnList" xml:space="preserve">
    <value>Stored procedures return List (default array)</value>
  </data>
  <data name="Tables" xml:space="preserve">
    <value>表</value>
  </data>
  <data name="UnableToAddConnection" xml:space="preserve">
    <value>无法添加连接，可能不支持该提供程序</value>
  </data>
  <data name="UnableToAddToList" xml:space="preserve">
    <value>无法添加到列表</value>
  </data>
  <data name="UnableToBuildSelectedDatabaseProject" xml:space="preserve">
    <value>无法生成所选的数据库项目</value>
  </data>
  <data name="UnableToRemoveConnection" xml:space="preserve">
    <value>无法删除连接</value>
  </data>
  <data name="UncheckedEFCoreVersionUsed" xml:space="preserve">
    <value>如果未选中，将使用 EF Core 3.1</value>
  </data>
  <data name="UncheckingFileRemoved" xml:space="preserve">
    <value>取消选中项，可能会导致相关文件被删除</value>
  </data>
  <data name="UnsupportedProvider" xml:space="preserve">
    <value>不支持的提供程序</value>
  </data>
  <data name="UseDataAnnotations" xml:space="preserve">
    <value>使用数据注释配置模型</value>
  </data>
  <data name="UseEF6Pluralizer" xml:space="preserve">
    <value>使用 EF6 的复数形式</value>
  </data>
  <data name="UseEFCore5" xml:space="preserve">
    <value>使用 EF Core 5</value>
  </data>
  <data name="UseNamesFromDatabase" xml:space="preserve">
    <value>使用数据库中的表名和列名</value>
  </data>
  <data name="UseNullableReferenceTypes" xml:space="preserve">
    <value>使用可为null的引用类型（实验性）</value>
  </data>
  <data name="UseRegularExpression" xml:space="preserve">
    <value>使用正则表达式</value>
  </data>
  <data name="UseTextSearch" xml:space="preserve">
    <value>使用文本搜索</value>
  </data>
  <data name="Views" xml:space="preserve">
    <value>视图</value>
  </data>
  <data name="WhatToGenerate" xml:space="preserve">
    <value>生成内容</value>
  </data>
</root>